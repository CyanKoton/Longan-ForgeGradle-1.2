
// longan-forge-gradle-LFG-1.2-1.1.0


apply plugin: "java"
apply plugin: "idea"
apply plugin: "eclipse"

//----------------------------------

apply plugin: "java-library"
apply plugin: "maven-publish"
apply plugin: "signing"


group = "io.github.longan-studio"
version = "1.2-1.1.0"


targetCompatibility = 1.8
sourceCompatibility = 1.8


repositories {
    mavenLocal()
    maven {
        name = "aliyun"
        url = "https://maven.aliyun.com/repository/public/"
    }
    maven {
        name = "forge"
        url = "https://maven.minecraftforge.net"
    }
    maven {
        name = "eclipse"
        url = "https://repo.eclipse.org/content/groups/eclipse/"
    }
    maven {
        name = "sonatype"
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype-s01"
        url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
    mavenCentral()
    maven {
        name = "mojang"
        url = "https://libraries.minecraft.net/"
    }
}


dependencies {
    implementation(gradleApi())

    // 移到开头成为覆盖者
    implementation("org.ow2.asm:asm:9.1")
    implementation("org.ow2.asm:asm-tree:9.1")
    implementation("com.google.guava:guava:18.0")

    implementation("net.sf.opencsv:opencsv:2.3") // reading CSVs.. also used by SpecialSource
    implementation("com.cloudbees:diff4j:1.3") // for difing and patching
    implementation("com.github.abrarsyed.jastyle:jAstyle:1.2") // formatting
    implementation("net.sf.trove4j:trove4j:2.1.0") // because its awesome.

    implementation("com.github.jponge:lzma-java:1.3") // replaces the LZMA binary
    implementation("com.nothome:javaxdelta:2.0.1") // GDIFF implementation for BinPatches
    implementation("com.google.code.gson:gson:2.8.6") // Used instead of Argo for buuilding changelog.
    implementation("com.github.tony19:named-regexp:0.2.3") // 1.7 Named regexp features

    implementation("net.md-5:SpecialSource:1.9.0") // deobf and reobs

    // 因为诅咒
    implementation("org.apache.httpcomponents:httpclient:4.5.13")
    implementation("org.apache.httpcomponents:httpmime:4.5.13")

    // mcp 的 东西
    implementation("de.oceanlabs.mcp:RetroGuard:3.6.6")
    implementation("de.oceanlabs.mcp:mcinjector:3.2-SNAPSHOT")
    implementation("net.minecraftforge:Srg2Source:4.2.7")

    // 愚蠢 maven
    compileOnly("org.apache.maven.wagon:wagon-ssh:3.4.3")


    // GradleStart 类中使用的东西
    compileOnly("com.mojang:authlib:1.5.16")
    compileOnly("net.minecraft:launchwrapper:1.11")

    testImplementation("junit:junit:4.+")
}


artifacts {
    archives(jar)
}


publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {

                name = project.archivesBaseName
                description = 'Gradle plugin for Forge'
                url = "https://github.com/anatawa12/ForgeGradle-1.2"

                scm {
                    url = "https://github.com/anatawa12/ForgeGradle-1.2"
                    connection = "scm:git:git://github.com/anatawa12/ForgeGradle-1.2.git"
                    developerConnection = "scm:git:git@github.com:anatawa12/ForgeGradle-1.2.git"
                }

                issueManagement {
                    system = "github"
                    url = "https://github.com/anatawa12/ForgeGradle-1.2/issues"
                }

                licenses {
                    license {
                        name = "Lesser GNU Public License, Version 2.1"
                        url = "https://www.gnu.org/licenses/lgpl-2.1.html"
                        distribution = "repo"
                    }
                }

                developers {
                    developer {
                        id = "AbrarSyed"
                        name = "Abrar Syed"
                        roles = ["developer"]
                    }

                    developer {
                        id = "LexManos"
                        name = "Lex Manos"
                        roles = ["developer"]
                    }

                    developer {
                        id = "anatawa12"
                        name = "anatawa12"
                        roles = ["developer"]
                    }
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
        maven {
            name = "OSSRH"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.findProperty("ossUsername") ?: System.getenv("USERNAME")
                password = project.findProperty("ossPassword") ?: System.getenv("PASSWORD")
            }
        }
    }
}



signing {
    sign publishing.publications.maven
}

file('build').mkdirs()
file('build/version.txt').text = version;


